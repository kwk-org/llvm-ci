FROM fedora:32

ENV LANG=en_US.utf8

RUN echo -e "\
[buildkite-agent] \n\
name            = Buildkite Pty Ltd \n\
baseurl         = https://yum.buildkite.com/buildkite-agent/stable/$(arch)/ \n\
enabled         = 1 \n\
priority        = 1 \n\
gpgcheck        = 0\
" > /etc/yum.repos.d/buildkite-agent.repo

RUN dnf install -y --setopt=tsflags=nodocs \
    buildkite-agent \
    ccache \
    clang \
    cmake \
    diffutils \
    findutils \
    gcc \
    gdb \
    git \
    glibc-all-langpacks \
    golang \
    jq \
    libatomic \
    libedit-devel \
    libstdc++-static \
    libxml2-devel \
    make \
    ncurses-devel \
    ninja-build \
    python27 \
    python3-psutil \
    python3 \
    python3-devel \
    redhat-lsb-core \
    rsync \
    swig \
    xz-devel \
    zip \
   && yum clean all

# TODO(kwk): Once buildbot on LLVM master is using version 2 we can get rid of
#            the python27 package.

ARG ci_git_revision=master
ENV CI_GIT_REVISION=${ci_git_revision}

# See: https://docs.openshift.com/container-platform/3.3/creating_images/guidelines.html#openshift-container-platform-specific-guidelines
RUN useradd --create-home worker \
    && mkdir -pv /home/worker/bin \
    && chgrp -R 0 /home/worker \
    && chmod -R g=u /home/worker /etc/passwd

################################################################################
#
#       BUILDKITE SPECIFICS
#
################################################################################

# WORKAROUND FOR OPENSHIFT BECAUSE "USER" COMMAND WILL BE IGNORED
# See: https://docs.openshift.com/container-platform/3.3/creating_images/guidelines.html#openshift-container-platform-specific-guidelines
RUN chgrp -R 0 /etc/buildkite-agent /var/lib/buildkite-agent && \
    chmod -R g=u /etc/buildkite-agent /var/lib/buildkite-agent

# ATTENTION: "USER" WILL BE IGNORED BY OPENSHIFT (see above)
# USER buildkite-agent

ENV BUILDKITE_BUILD_PATH=/home/worker/buildkite/builds
RUN mkdir -p ${BUILDKITE_BUILD_PATH}

# This allows you to split the build cache and the builds itself into different
# volumes.
RUN mkdir -p ${BUILDKITE_BUILD_PATH} /ccache \
    && chgrp -R 0 ${BUILDKITE_BUILD_PATH} /ccache \
    && chmod -R g=u ${BUILDKITE_BUILD_PATH} /ccache
VOLUME ["${BUILDKITE_BUILD_PATH}", "/ccache"]

# Adapt this to whatever docker base image this builds on and what settings you have configured LLVM with
ENV BUILDKITE_AGENT_TAGS="ci_git_revision=${CI_GIT_REVISION}"

# Ensure we only download the latest version and not more
ENV BUILDKITE_GIT_CLONE_FLAGS="-v --depth=1"

# Don't automatically run ssh-keyscan before checkout
ENV BUILDKITE_NO_SSH_KEYSCAN=1

# Don't show colors in logging
ENV BUILDKITE_AGENT_NO_COLOR=1

# Start an HTTP server on this addr:port that returns whether the agent is healthy, disabled by default
ENV BUILDKITE_AGENT_HEALTH_CHECK_ADDR="0.0.0.0:9090"

################################################################################
#
#       BUILDBOT SPECIFICS
#
################################################################################

# For now, use old version of buildbot because of protocol incompatibility with
# the buildbot master.
# (See https://lists.llvm.org/pipermail/lldb-dev/2020-June/016296.html)
# TODO(kwk): Once migrated to buildbot 2, you should install the buildbot-worker package and get rid of this:
# USER 10001
# WORKDIR /home/worker

# Install pip for Python2

# WARNING:
# --------
# DEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020.
# Please upgrade your Python as Python 2.7 is no longer maintained. pip 21.0
# will drop support for Python 2.7 in January 2021. More details about Python 2
# support in pip can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support
# pip 21.0 will remove support for this functionality.

RUN cd /home/worker \
    && curl -L -s https://bootstrap.pypa.io/get-pip.py -o get-pip.py \
    && python2 get-pip.py \
    && pip2 install buildbot-slave==0.8.5 \
    && rm -f get-pip.py

# Alternatively:
#
# ENV BUILDBOT_VERSION=0.8.11
# RUN cd /home/worker \
#     && curl -L -s https://github.com/buildbot/buildbot/archive/v${BUILDBOT_VERSION}.tar.gz -o buildbot.tar.gz \
#      && echo "f7b9a3b13fa26b6f5268930906fafa3bd5b72978bf7f0032869d1fddee487e55  buildbot.tar.gz" > buildbot.tar.gz.sha256 \
#      && sha256sum --check buildbot.tar.gz.sha256 \
#      && tar xzf buildbot.tar.gz \
#      && cd buildbot-${BUILDBOT_VERSION}/slave \
#      && python2 ./setup.py install --prefix=/home/worker  \
#      && rm -rfv /home/worker/buildbot.tar.gz* /home/worker/buildbot-${BUILDBOT_VERSION} \
#     && cd /home/worker \
#     && curl -L -s https://github.com/twisted/twisted/archive/twisted-12.1.0.tar.gz -o twisted-12.1.0.tar.gz \
#      && echo "9547d7343df120e6f9f87a264a78c7889ae5b6eeebf086d211d46427059264e6  twisted-12.1.0.tar.gz" > twisted-12.1.0.tar.gz.sha256 \
#      && sha256sum --check twisted-12.1.0.tar.gz.sha256 \
#      && tar xzf twisted-12.1.0.tar.gz \
#      && cd twisted-twisted-12.1.0 \
#      && python2 ./setup.py install --prefix=/home/worker \
#      && rm -rfv /home/worker/twisted-12.1.0.tar.gz* /home/worker/twisted-twisted-12.1.0 \
#     && cd /home/worker \
#     && curl -L -s https://github.com/zopefoundation/zope.interface/archive/3.6.8.tar.gz -o zope.tar.gz \
#      && echo "9a8048aef646817952f8e48b225d4b270e632952a44193df3910cb2546f02f2f  zope.tar.gz" > zope.tar.gz.sha256 \
#      && sha256sum --check zope.tar.gz.sha256 \
#      && tar xzf zope.tar.gz \
#      && cd zope.interface-3.6.8 \
#      && python2 ./setup.py install --prefix=/home/worker \
#      && rm -rfv /home/worker/zope*

ENV PYTHONPATH="/home/worker/lib/python2.7/site-packages:/home/worker/lib64/python2.7/site-packages:\$PYTHONPATH"

# 9994 = staging
# 9990 = production
ENV BUILDBOT_MASTER="lab.llvm.org:9994"

# All commands are run in a build-specific subdirectory of this base dir
ENV BUILDBOT_BASEDIR="/home/worker/buildbot"

# Options passed to buildbot-worker create-worker
ENV BUILDBOT_CREATE_WORKER_OPTS=""

# Will be visible from the build status page. So you may wish to munge it a bit
# if address-harvesting spambots are a concern.
ENV BUILDBOT_INFO_ADMIN="Your Name <yourname at email dot com>"

ENV BUILDBOT_ACCESS_URI=""

################################################################################

COPY bin/* /home/worker/bin
ENV PATH="/home/worker/bin:${PATH}" HOME=/home/worker
RUN chmod +x /home/worker/bin/*

# Needed for when you want to run the build locally
ARG ci_container_image_ref
ENV CI_CONTAINER_IMAGE_REF=${ci_container_image_ref}

RUN dnf debuginfo-install -y libgcc-10.2.1-1.fc32.x86_64 glibc-2.31-2.fc32.x86_64 

USER 10001
WORKDIR /home/worker

# Volumes to mount secrets into the container
VOLUME /buildbot-secret-volume
VOLUME /buildkite-secret-volume

# 9090 is supposed to be our health port
EXPOSE \
  9090/tcp

# We check the health of the container by checking the
# https://docs.docker.com/engine/reference/builder/#healthcheck)
HEALTHCHECK --interval=5m --timeout=3s \
  CMD curl -f http://0.0.0.0:9090/ || exit 1

ENTRYPOINT [ "uid_entrypoint.sh" ]

CMD [ "buildbot.sh" ]



