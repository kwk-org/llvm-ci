FROM fedora:32

ENV LANG=en_US.utf8

RUN echo -e "\
[buildkite-agent] \n\
name            = Buildkite Pty Ltd \n\
baseurl         = https://yum.buildkite.com/buildkite-agent/stable/$(arch)/ \n\
enabled         = 1 \n\
priority        = 1 \n\
gpgcheck        = 0\
" > /etc/yum.repos.d/buildkite-agent.repo

RUN dnf install -y --setopt=tsflags=nodocs \
    buildbot-worker \
    buildkite-agent \
    ccache \
    clang \
    cmake \
    diffutils \
    findutils \
    gcc \
    gdb \
    git \
    golang \
    jq \
    libatomic \
    libedit-devel \
    libstdc++-static \
    libxml2-devel \
    make \
    ncurses-devel \
    ninja-build \
    python3-psutil \
    python3 \
    python3-devel \
    rsync \
    swig \
    xz-devel \
    zip \
   && yum clean all

ARG ci_git_revision=master
ENV CI_GIT_REVISION=${ci_git_revision}

################################################################################
#
#       BUILDKITE SPECIFICS
#
################################################################################

# WORKAROUND FOR OPENSHIFT BECAUSE "USER" COMMAND WILL BE IGNORED
# See: https://docs.openshift.com/container-platform/3.3/creating_images/guidelines.html#openshift-container-platform-specific-guidelines
RUN chgrp -R 0 /etc/buildkite-agent /var/lib/buildkite-agent && \
    chmod -R g=u /etc/buildkite-agent /var/lib/buildkite-agent

# ATTENTION: "USER" WILL BE IGNORED BY OPENSHIFT (see above)
# USER buildkite-agent

# This allows you to split the build cache and the builds itself into different
# volumes.
RUN mkdir -p /var/lib/buildkite-agent/builds /ccache \
    && chgrp -R 0 /var/lib/buildkite-agent/builds /ccache \
    && chmod -R g=u /var/lib/buildkite-agent/builds /ccache
VOLUME ["/var/lib/buildkite-agent/builds", "/ccache"]

################################################################################
#
#       BUILDBOT SPECIFICS
#
################################################################################

################################################################################

# 9090 is supposed to be our health port
EXPOSE \
  9090/tcp

# We check the health of the container by checking the
# https://docs.docker.com/engine/reference/builder/#healthcheck)
HEALTHCHECK --interval=5m --timeout=3s \
  CMD curl -f http://0.0.0.0:9090/ || exit 1

# Needed for when you want to run the build locally
ARG ci_container_image_ref
ENV CI_CONTAINER_IMAGE_REF=${ci_container_image_ref}

# See: https://docs.openshift.com/container-platform/3.3/creating_images/guidelines.html#openshift-container-platform-specific-guidelines
ENV HOME_DIR=/home/ci-worker
RUN useradd --create-home --home-dir ${HOME_DIR} ci-worker \
    && chmod -R g=u ${HOME_DIR} /etc/passwd
    && mkdir -pv ${HOME_DIR}/bin \
COPY bin/* ${HOME_DIR}/bin
ENV PATH=${HOME_DIR}/bin:${PATH} HOME=${HOME_DIR}
RUN chmod +x ${HOME_DIR}/bin/*
USER 10001

ENTRYPOINT [ "uid_entrypoint.sh" ]

CMD [ "${HOME_DIR}/bin/buildkite.sh" ]

