FROM fedora:32

ENV LANG=en_US.utf8

RUN echo -e "\
[buildkite-agent] \n\
name            = Buildkite Pty Ltd \n\
baseurl         = https://yum.buildkite.com/buildkite-agent/stable/$(arch)/ \n\
enabled         = 1 \n\
priority        = 1 \n\
gpgcheck        = 0\
" > /etc/yum.repos.d/buildkite-agent.repo

RUN dnf install -y --setopt=tsflags=nodocs \
    buildkite-agent \
    ccache \
    clang \
    cmake \
    diffutils \
    findutils \
    gcc \
    gdb \
    git \
    golang \
    jq \
    libatomic \
    libedit-devel \
    libstdc++-static \
    libxml2-devel \
    make \
    ncurses-devel \
    ninja-build \
    python27 \
    python3-psutil \
    python3 \
    python3-devel \
    redhat-lsb-core \
    rsync \
    swig \
    xz-devel \
    zip \
   && yum clean all

# TODO(kwk): Once buildbot on LLVM master is using version 2 we can get rid of
#            the python27 package.

ARG ci_git_revision=master
ENV CI_GIT_REVISION=${ci_git_revision}

# See: https://docs.openshift.com/container-platform/3.3/creating_images/guidelines.html#openshift-container-platform-specific-guidelines
RUN useradd --create-home worker \
    && mkdir -pv /home/worker/bin \
    && chgrp -R 0 /home/worker \
    && chmod -R g=u /home/worker /etc/passwd
    
COPY bin/* /home/worker/bin
ENV PATH="/home/worker/bin:${PATH}" HOME=/home/worker
RUN chmod +x /home/worker/bin/*

################################################################################
#
#       BUILDKITE SPECIFICS
#
################################################################################

# WORKAROUND FOR OPENSHIFT BECAUSE "USER" COMMAND WILL BE IGNORED
# See: https://docs.openshift.com/container-platform/3.3/creating_images/guidelines.html#openshift-container-platform-specific-guidelines
RUN chgrp -R 0 /etc/buildkite-agent /var/lib/buildkite-agent && \
    chmod -R g=u /etc/buildkite-agent /var/lib/buildkite-agent

# ATTENTION: "USER" WILL BE IGNORED BY OPENSHIFT (see above)
# USER buildkite-agent

# This allows you to split the build cache and the builds itself into different
# volumes.
RUN mkdir -p /var/lib/buildkite-agent/builds /ccache \
    && chgrp -R 0 /var/lib/buildkite-agent/builds /ccache \
    && chmod -R g=u /var/lib/buildkite-agent/builds /ccache
VOLUME ["/var/lib/buildkite-agent/builds", "/ccache"]

# This is the secret you should set from outside
ENV BUILDKITE_AGENT_TOKEN="<REPLACE_ME>"

# Adapt this to whatever docker base image this builds on and what settings you have configured LLVM with
ENV BUILDKITE_AGENT_TAGS="ci_git_revision=${CI_GIT_REVISION}"

# Ensure we only download the latest version and not more
ENV BUILDKITE_GIT_CLONE_FLAGS="-v --depth=1"

# Don't automatically run ssh-keyscan before checkout
ENV BUILDKITE_NO_SSH_KEYSCAN=1

# Don't show colors in logging
ENV BUILDKITE_AGENT_NO_COLOR=1

# Start an HTTP server on this addr:port that returns whether the agent is healthy, disabled by default
ENV BUILDKITE_AGENT_HEALTH_CHECK_ADDR="0.0.0.0:9090"

################################################################################
#
#       BUILDBOT SPECIFICS
#
################################################################################

# For now, use old version of buildbot because of protocol incompatibility with
# the buildbot master.
# (See https://lists.llvm.org/pipermail/lldb-dev/2020-June/016296.html)
# TODO(kwk): Once migrated to buildbot 2, you should install the buildbot-worker package and get rid of this:
USER 10001
RUN cd ~/ \
    && curl -L https://github.com/buildbot/buildbot/archive/v0.8.5.tar.gz | tar xzf - \
    && cd buildbot-0.8.5/slave \
    && export PYTHONPATH=\$HOME/lib/python2.7/site-packages;python2 \
    && ./setup.py install --prefix=\$HOME

ENV BUILDBOT_WORKER_NAME="<REPLACE_ME>"
ENV BUILDBOT_WORKER_PASSWORD="<YOUR_SECRET>"
# 9994 = staging
# 9990 = production
ENV BUILDBOT_MASTER="lab.llvm.org:9994"

# All commands are run in a build-specific subdirectory of this base dir
ENV BUILDBOT_BASEDIR="/home/worker/buildbot-basedir"

# Options passed to buildbot-worker create-worker
ENV BUILDBOT_CREATE_WORKER_OPTS=""

# Will be visible from the build status page. So you may wish to munge it a bit
# if address-harvesting spambots are a concern.
ENV BUILDBOT_INFO_ADMIN="Your Name <yourname at email dot com>"

################################################################################

# Needed for when you want to run the build locally
ARG ci_container_image_ref
ENV CI_CONTAINER_IMAGE_REF=${ci_container_image_ref}

USER 10001
WORKDIR /home/worker

# 9090 is supposed to be our health port
EXPOSE \
  9090/tcp

# We check the health of the container by checking the
# https://docs.docker.com/engine/reference/builder/#healthcheck)
HEALTHCHECK --interval=5m --timeout=3s \
  CMD curl -f http://0.0.0.0:9090/ || exit 1

ENTRYPOINT [ "uid_entrypoint.sh" ]

CMD [ "buildkite.sh" ]

